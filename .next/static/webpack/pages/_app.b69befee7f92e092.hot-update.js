"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   absensiApi: function() { return /* binding */ absensiApi; },\n/* harmony export */   authApi: function() { return /* binding */ authApi; },\n/* harmony export */   cabangApi: function() { return /* binding */ cabangApi; },\n/* harmony export */   dashboardApi: function() { return /* binding */ dashboardApi; },\n/* harmony export */   jabatanApi: function() { return /* binding */ jabatanApi; },\n/* harmony export */   karyawanApi: function() { return /* binding */ karyawanApi; },\n/* harmony export */   monitoringApi: function() { return /* binding */ monitoringApi; },\n/* harmony export */   payrollApi: function() { return /* binding */ payrollApi; },\n/* harmony export */   usersApi: function() { return /* binding */ usersApi; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n// Create axios instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: process.env.NEXT_PUBLIC_API_URL || \"/api\",\n    timeout: 10000,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n});\n// Request interceptor to add auth token\napi.interceptors.request.use((config)=>{\n    const token = localStorage.getItem(\"auth_token\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor to handle errors\napi.interceptors.response.use((response)=>{\n    return response;\n}, (error)=>{\n    var _error_response;\n    if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401) {\n        // Unauthorized - clear auth and redirect to login\n        localStorage.removeItem(\"auth_token\");\n        localStorage.removeItem(\"auth_user\");\n        window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n});\n// Helper function to handle API responses\nconst handleResponse = (response)=>{\n    return response.data;\n};\n// Auth API\nconst authApi = {\n    login: async (credentials)=>{\n        const response = await api.post(\"/auth/login\", credentials);\n        return handleResponse(response);\n    },\n    logout: async ()=>{\n        const response = await api.post(\"/auth/logout\");\n        return handleResponse(response);\n    },\n    getProfile: async ()=>{\n        const response = await api.get(\"/auth/profile\");\n        return handleResponse(response);\n    },\n    refreshToken: async ()=>{\n        const response = await api.post(\"/auth/refresh\");\n        return handleResponse(response);\n    }\n};\n// Users API\nconst usersApi = {\n    getUsers: async (filters)=>{\n        const response = await api.get(\"/users\", {\n            params: filters\n        });\n        return handleResponse(response);\n    },\n    getUser: async (id)=>{\n        const response = await api.get(\"/users/\".concat(id));\n        return handleResponse(response);\n    },\n    createUser: async (data)=>{\n        const response = await api.post(\"/users\", data);\n        return handleResponse(response);\n    },\n    updateUser: async (id, data)=>{\n        const response = await api.put(\"/users/\".concat(id), data);\n        return handleResponse(response);\n    },\n    deleteUser: async (id)=>{\n        const response = await api.delete(\"/users/\".concat(id));\n        return handleResponse(response);\n    }\n};\n// Cabang API\nconst cabangApi = {\n    getCabang: async (filters)=>{\n        const response = await api.get(\"/cabang\", {\n            params: filters\n        });\n        return handleResponse(response);\n    },\n    getCabangById: async (id)=>{\n        const response = await api.get(\"/cabang/\".concat(id));\n        return handleResponse(response);\n    },\n    createCabang: async (data)=>{\n        const response = await api.post(\"/cabang\", data);\n        return handleResponse(response);\n    },\n    updateCabang: async (id, data)=>{\n        const response = await api.put(\"/cabang/\".concat(id), data);\n        return handleResponse(response);\n    },\n    deleteCabang: async (id)=>{\n        const response = await api.delete(\"/cabang/\".concat(id));\n        return handleResponse(response);\n    }\n};\n// Jabatan API\nconst jabatanApi = {\n    getJabatan: async (filters)=>{\n        const response = await api.get(\"/jabatan\", {\n            params: filters\n        });\n        return handleResponse(response);\n    },\n    getJabatanById: async (id)=>{\n        const response = await api.get(\"/jabatan/\".concat(id));\n        return handleResponse(response);\n    },\n    createJabatan: async (data)=>{\n        const response = await api.post(\"/jabatan\", data);\n        return handleResponse(response);\n    },\n    updateJabatan: async (id, data)=>{\n        const response = await api.put(\"/jabatan/\".concat(id), data);\n        return handleResponse(response);\n    },\n    deleteJabatan: async (id)=>{\n        const response = await api.delete(\"/jabatan/\".concat(id));\n        return handleResponse(response);\n    }\n};\n// Karyawan API\nconst karyawanApi = {\n    getKaryawan: async (filters)=>{\n        const response = await api.get(\"/karyawan\", {\n            params: filters\n        });\n        return handleResponse(response);\n    },\n    getKaryawanById: async (id)=>{\n        const response = await api.get(\"/karyawan/\".concat(id));\n        return handleResponse(response);\n    },\n    createKaryawan: async (data)=>{\n        const response = await api.post(\"/karyawan\", data);\n        return handleResponse(response);\n    },\n    updateKaryawan: async (id, data)=>{\n        const response = await api.put(\"/karyawan/\".concat(id), data);\n        return handleResponse(response);\n    },\n    deleteKaryawan: async (id)=>{\n        const response = await api.delete(\"/karyawan/\".concat(id));\n        return handleResponse(response);\n    }\n};\n// Absensi API\nconst absensiApi = {\n    getAbsensi: async (filters)=>{\n        const response = await api.get(\"/absensi\", {\n            params: filters\n        });\n        return handleResponse(response);\n    },\n    getAbsensiById: async (id)=>{\n        const response = await api.get(\"/absensi/\".concat(id));\n        return handleResponse(response);\n    },\n    createAbsensi: async (data)=>{\n        const response = await api.post(\"/absensi\", data);\n        return handleResponse(response);\n    },\n    updateAbsensi: async (id, data)=>{\n        const response = await api.put(\"/absensi/\".concat(id), data);\n        return handleResponse(response);\n    },\n    deleteAbsensi: async (id)=>{\n        const response = await api.delete(\"/absensi/\".concat(id));\n        return handleResponse(response);\n    },\n    syncFingerprint: async ()=>{\n        const response = await api.post(\"/absensi/sync-fingerprint\");\n        return handleResponse(response);\n    }\n};\n// Monitoring API\nconst monitoringApi = {\n    getDevices: async ()=>{\n        const response = await api.get(\"/monitoring/devices\");\n        return handleResponse(response);\n    },\n    getDeviceStatus: async (deviceId)=>{\n        const response = await api.get(\"/monitoring/devices/\".concat(deviceId, \"/status\"));\n        return handleResponse(response);\n    },\n    syncDevice: async (deviceId)=>{\n        const response = await api.post(\"/monitoring/devices/\".concat(deviceId, \"/sync\"));\n        return handleResponse(response);\n    },\n    testConnection: async (deviceId)=>{\n        const response = await api.post(\"/monitoring/devices/\".concat(deviceId, \"/test\"));\n        return handleResponse(response);\n    }\n};\n// Payroll API\nconst payrollApi = {\n    getDeductions: async (period)=>{\n        const response = await api.get(\"/payroll/deductions?period=\".concat(period));\n        return handleResponse(response);\n    },\n    processDeductions: async (period)=>{\n        const response = await api.post(\"/payroll/deductions\", {\n            period\n        });\n        return handleResponse(response);\n    }\n};\n// Dashboard API\nconst dashboardApi = {\n    getStats: async ()=>{\n        const response = await api.get(\"/dashboard/stats\");\n        return handleResponse(response);\n    },\n    getAttendanceChart: async function() {\n        let period = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"7days\";\n        const response = await api.get(\"/dashboard/attendance-chart\", {\n            params: {\n                period\n            }\n        });\n        return handleResponse(response);\n    },\n    getRecentActivities: async function() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        const response = await api.get(\"/dashboard/recent-activities\", {\n            params: {\n                limit\n            }\n        });\n        return handleResponse(response);\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/api.ts\n"));

/***/ })

});