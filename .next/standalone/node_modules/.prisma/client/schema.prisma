// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    BigInt    @id @default(autoincrement())
  nama_pegawai          String    @db.VarChar(255)
  tempat_lahir          String?   @db.VarChar(255)
  tanggal_lahir         DateTime? @db.Date
  jenis_kelamin         String?   @db.VarChar(255)
  alamat                String?   @db.Text
  tanggal_masuk         DateTime? @db.Date
  gaji                  Int?      @default(0)
  status_pegawai        Boolean?  @default(false)
  email                 String    @unique @db.VarChar(255)
  email_verified_at     DateTime? @db.Timestamp(6)
  password              String    @db.VarChar(255)
  remember_token        String?   @db.VarChar(100)
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
  role                  String?   @default("user") @db.VarChar(50)
  id_jabatan            BigInt?
  id_cabang             BigInt?
  jam_istirahat_mulai   DateTime? @db.Time(6)
  jam_istirahat_selesai DateTime? @db.Time(6)
  device_user_id        String?   @db.VarChar(50)

  // Relations
  jabatan                Jabatan?                @relation(fields: [id_jabatan], references: [id], onDelete: Restrict)
  cabang                 Cabang?                 @relation(fields: [id_cabang], references: [id], onDelete: SetNull)
  absensi                Absensi[]
  fingerprintAttendances FingerprintAttendance[]

  @@index([role, id_cabang], map: "idx_users_role_cabang")
  @@index([device_user_id], map: "idx_users_device_id")
  @@map("users")
}

model Jabatan {
  id                    BigInt    @id @default(autoincrement())
  nama_jabatan          String    @db.VarChar(255)
  jam_masuk             DateTime? @db.Time(6)
  jam_masuk_siang       DateTime? @db.Time(6)
  jatah_libur_per_bulan Int       @default(2)
  denda_per_hari_libur  Decimal   @default(50000.00) @db.Decimal(10, 2)
  bonus_tidak_libur     Decimal   @default(25000.00) @db.Decimal(10, 2)
  gaji_pokok            Decimal?  @db.Decimal(15, 2)
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)

  // Relations
  users User[]

  @@map("jabatans")
}

model Cabang {
  id             BigInt    @id @default(autoincrement())
  nama_cabang    String    @db.VarChar(255)
  alamat_cabang  String?   @db.Text
  telepon_cabang String?   @db.VarChar(20)
  email_cabang   String?   @db.VarChar(255)
  kode_cabang    String    @unique @db.VarChar(10)
  status         Boolean   @default(true)
  created_at     DateTime? @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)

  // Relations
  users                  User[]
  absensi                Absensi[]
  fingerprintAttendances FingerprintAttendance[]

  @@map("cabang")
}

model Absensi {
  id                    BigInt    @id @default(autoincrement())
  id_user               BigInt
  tanggal               DateTime  @db.Date
  jam_masuk             DateTime? @db.Time(6)
  jam_keluar            DateTime? @db.Time(6)
  jam_istirahat_mulai   DateTime? @db.Time(6)
  jam_istirahat_selesai DateTime? @db.Time(6)
  status                String    @default("hadir") @db.VarChar(50)
  keterangan            String?   @db.Text
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
  id_cabang             BigInt?

  // Relations
  user   User    @relation(fields: [id_user], references: [id], onDelete: Cascade)
  cabang Cabang? @relation(fields: [id_cabang], references: [id], onDelete: SetNull)

  @@index([id_user, tanggal], map: "idx_absensi_user_tanggal")
  @@index([tanggal], map: "idx_absensi_tanggal")
  @@index([status], map: "idx_absensi_status")
  @@map("absensis")
}

model FingerprintAttendance {
  id                BigInt    @id @default(autoincrement())
  user_id           BigInt?
  device_user_id    String?   @db.VarChar(50)
  cabang_id         BigInt?
  attendance_time   DateTime  @db.Timestamp(6)
  attendance_type   Int       @default(1)
  verification_type String?   @db.VarChar(50)
  fingerprint_id    String?   @db.VarChar(50)
  device_ip         String?   @db.VarChar(45)
  device_name       String?   @db.VarChar(100)
  is_processed      Boolean   @default(false)
  processing_status String?   @default("pending") @db.VarChar(50)
  sync_batch_id     String?   @db.VarChar(100)
  is_realtime       Boolean   @default(false)
  created_at        DateTime? @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)

  // Relations
  user   User?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  cabang Cabang? @relation(fields: [cabang_id], references: [id], onDelete: SetNull)

  @@index([device_user_id, device_ip], map: "fingerprint_attendances_device_user_id_device_ip_index")
  @@index([attendance_time], map: "fingerprint_attendances_attendance_time_index")
  @@index([is_processed], map: "fingerprint_attendances_is_processed_index")
  @@index([user_id], map: "fingerprint_attendances_user_id_index")
  @@map("fingerprint_attendances")
}

model Event {
  id            String   @id @default(cuid())
  eventType     String   @db.VarChar(255)
  aggregateId   String   @db.VarChar(255)
  aggregateType String   @db.VarChar(255)
  eventData     Json
  metadata      Json?
  version       Int
  timestamp     DateTime @default(now())
  userId        String?  @db.VarChar(255)

  @@index([aggregateId, version], map: "events_aggregate_id_version_index")
  @@index([eventType], map: "events_event_type_index")
  @@index([timestamp], map: "events_timestamp_index")
  @@map("events")
}

model ReadModel {
  id          String   @id @default(cuid())
  type        String   @db.VarChar(255)
  data        Json
  version     Int      @default(1)
  lastUpdated DateTime @default(now()) @updatedAt

  @@unique([type, id], map: "read_models_type_id_unique")
  @@index([type], map: "read_models_type_index")
  @@map("read_models")
}

model IdempotencyKey {
  key         String   @id @db.VarChar(255)
  requestHash String   @db.VarChar(255)
  response    Json?
  status      String   @default("processing") @db.VarChar(50)
  createdAt   DateTime @default(now())
  expiresAt   DateTime

  @@index([status], map: "idempotency_keys_status_index")
  @@index([expiresAt], map: "idempotency_keys_expires_at_index")
  @@map("idempotency_keys")
}

model AttendanceDeduplication {
  id              String   @id @default(cuid())
  deviceId        String   @db.VarChar(255)
  employeeId      String   @db.VarChar(255)
  fingerprintHash String   @db.VarChar(255)
  timestamp       DateTime
  createdAt       DateTime @default(now())

  @@unique([deviceId, employeeId, fingerprintHash, timestamp], map: "attendance_dedup_unique")
  @@index([deviceId, employeeId], map: "attendance_dedup_device_employee_index")
  @@index([timestamp], map: "attendance_dedup_timestamp_index")
  @@map("attendance_deduplication")
}

model BusinessRules {
  id          String    @id @default(cuid())
  name        String    @db.VarChar(255)
  description String    @db.Text
  category    String    @db.VarChar(100)
  conditions  Json
  actions     Json
  priority    Int       @default(0)
  isActive    Boolean   @default(true)
  validFrom   DateTime  @default(now())
  validTo     DateTime?
  createdBy   String    @db.VarChar(255)
  updatedBy   String    @db.VarChar(255)
  version     Int       @default(1)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([category, isActive], map: "business_rules_category_active_index")
  @@index([validFrom, validTo], map: "business_rules_validity_index")
  @@index([priority], map: "business_rules_priority_index")
  @@map("business_rules")
}

model PayrollDeductions {
  id          String   @id @default(cuid())
  employeeId  String   @db.VarChar(255)
  amount      Decimal  @db.Decimal(10, 2)
  reason      String   @db.VarChar(255)
  type        String   @db.VarChar(100)
  ruleId      String?  @db.VarChar(255)
  appliedDate DateTime @default(now())
  payrollId   String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([employeeId], map: "payroll_deductions_employee_index")
  @@index([appliedDate], map: "payroll_deductions_date_index")
  @@index([ruleId], map: "payroll_deductions_rule_index")
  @@map("payroll_deductions")
}
