"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/devices/cloud-config";
exports.ids = ["pages/api/devices/cloud-config"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdevices%2Fcloud-config&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdevices%5Ccloud-config.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdevices%2Fcloud-config&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdevices%5Ccloud-config.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_devices_cloud_config_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\devices\\cloud-config.ts */ \"(api)/./pages/api/devices/cloud-config.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_devices_cloud_config_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_devices_cloud_config_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/devices/cloud-config\",\n        pathname: \"/api/devices/cloud-config\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_devices_cloud_config_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmRldmljZXMlMkZjbG91ZC1jb25maWcmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2RldmljZXMlNUNjbG91ZC1jb25maWcudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDbUU7QUFDbkU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLCtEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywrREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZm1zLW5leHRqcy8/YjJhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXGRldmljZXNcXFxcY2xvdWQtY29uZmlnLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZGV2aWNlcy9jbG91ZC1jb25maWdcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kZXZpY2VzL2Nsb3VkLWNvbmZpZ1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdevices%2Fcloud-config&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdevices%5Ccloud-config.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth-middleware.ts":
/*!********************************!*\
  !*** ./lib/auth-middleware.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withAdminAuth: () => (/* binding */ withAdminAuth),\n/* harmony export */   withAuth: () => (/* binding */ withAuth)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction withAuth(handler, requiredRoles) {\n    return async (req, res)=>{\n        try {\n            // Get token from Authorization header\n            const authHeader = req.headers.authorization;\n            if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n                return res.status(401).json({\n                    message: \"No token provided\"\n                });\n            }\n            const token = authHeader.substring(7); // Remove 'Bearer ' prefix\n            // Verify JWT token\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, \"your-super-secret-jwt-key-here-development\" || 0);\n            if (!decoded || !decoded.id) {\n                return res.status(401).json({\n                    message: \"Invalid token\"\n                });\n            }\n            // Add user info to request\n            req.user = {\n                id: decoded.id,\n                userId: parseInt(decoded.id) || 1,\n                email: decoded.email || \"\",\n                name: decoded.name || \"\",\n                role: decoded.role || \"admin\"\n            };\n            // Check role if required\n            if (requiredRoles) {\n                const allowedRoles = Array.isArray(requiredRoles) ? requiredRoles : [\n                    requiredRoles\n                ];\n                if (!allowedRoles.includes(req.user.role)) {\n                    return res.status(403).json({\n                        message: \"Insufficient permissions\"\n                    });\n                }\n            }\n            // Call the actual handler\n            return await handler(req, res);\n        } catch (error) {\n            console.error(\"Auth middleware error:\", error);\n            return res.status(401).json({\n                message: \"Invalid token\"\n            });\n        }\n    };\n}\nfunction withAdminAuth(handler) {\n    return withAuth(handler, \"admin\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvYXV0aC1taWRkbGV3YXJlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDK0I7QUFZeEIsU0FBU0MsU0FDZEMsT0FBMkUsRUFDM0VDLGFBQWlDO0lBRWpDLE9BQU8sT0FBT0MsS0FBMkJDO1FBQ3ZDLElBQUk7WUFDRixzQ0FBc0M7WUFDdEMsTUFBTUMsYUFBYUYsSUFBSUcsT0FBTyxDQUFDQyxhQUFhO1lBQzVDLElBQUksQ0FBQ0YsY0FBYyxDQUFDQSxXQUFXRyxVQUFVLENBQUMsWUFBWTtnQkFDcEQsT0FBT0osSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLFNBQVM7Z0JBQ1g7WUFDRjtZQUVBLE1BQU1DLFFBQVFQLFdBQVdRLFNBQVMsQ0FBQyxJQUFJLDBCQUEwQjtZQUVqRSxtQkFBbUI7WUFDbkIsTUFBTUMsVUFBVWYsMERBQVUsQ0FBQ2EsT0FBT0ksNENBQXNCLElBQUk7WUFFNUQsSUFBSSxDQUFDRixXQUFXLENBQUNBLFFBQVFLLEVBQUUsRUFBRTtnQkFDM0IsT0FBT2YsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLFNBQVM7Z0JBQ1g7WUFDRjtZQUVBLDJCQUEyQjtZQUMzQlIsSUFBSWlCLElBQUksR0FBRztnQkFDVEQsSUFBSUwsUUFBUUssRUFBRTtnQkFDZEUsUUFBUUMsU0FBU1IsUUFBUUssRUFBRSxLQUFLO2dCQUNoQ0ksT0FBT1QsUUFBUVMsS0FBSyxJQUFJO2dCQUN4QkMsTUFBTVYsUUFBUVUsSUFBSSxJQUFJO2dCQUN0QkMsTUFBTVgsUUFBUVcsSUFBSSxJQUFJO1lBQ3hCO1lBRUEseUJBQXlCO1lBQ3pCLElBQUl2QixlQUFlO2dCQUNqQixNQUFNd0IsZUFBZUMsTUFBTUMsT0FBTyxDQUFDMUIsaUJBQWlCQSxnQkFBZ0I7b0JBQUNBO2lCQUFjO2dCQUNuRixJQUFJLENBQUN3QixhQUFhRyxRQUFRLENBQUMxQixJQUFJaUIsSUFBSSxDQUFDSyxJQUFJLEdBQUc7b0JBQ3pDLE9BQU9yQixJQUFJSyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO3dCQUMxQkMsU0FBUztvQkFDWDtnQkFDRjtZQUNGO1lBRUEsMEJBQTBCO1lBQzFCLE9BQU8sTUFBTVYsUUFBUUUsS0FBS0M7UUFFNUIsRUFBRSxPQUFPMEIsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtZQUN4QyxPQUFPMUIsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7WUFDWDtRQUNGO0lBQ0Y7QUFDRjtBQUVPLFNBQVNxQixjQUNkL0IsT0FBMkU7SUFFM0UsT0FBT0QsU0FBU0MsU0FBUztBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FmbXMtbmV4dGpzLy4vbGliL2F1dGgtbWlkZGxld2FyZS50cz84ZTI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuZXhwb3J0IGludGVyZmFjZSBBdXRoZW50aWNhdGVkUmVxdWVzdCBleHRlbmRzIE5leHRBcGlSZXF1ZXN0IHtcbiAgdXNlcj86IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIHVzZXJJZDogbnVtYmVyO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHJvbGU6IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhBdXRoKFxuICBoYW5kbGVyOiAocmVxOiBBdXRoZW50aWNhdGVkUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpID0+IFByb21pc2U8dm9pZD4sXG4gIHJlcXVpcmVkUm9sZXM/OiBzdHJpbmcgfCBzdHJpbmdbXVxuKSB7XG4gIHJldHVybiBhc3luYyAocmVxOiBBdXRoZW50aWNhdGVkUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gR2V0IHRva2VuIGZyb20gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xuICAgICAgaWYgKCFhdXRoSGVhZGVyIHx8ICFhdXRoSGVhZGVyLnN0YXJ0c1dpdGgoJ0JlYXJlciAnKSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIG1lc3NhZ2U6ICdObyB0b2tlbiBwcm92aWRlZCdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlci5zdWJzdHJpbmcoNyk7IC8vIFJlbW92ZSAnQmVhcmVyICcgcHJlZml4XG4gICAgICBcbiAgICAgIC8vIFZlcmlmeSBKV1QgdG9rZW5cbiAgICAgIGNvbnN0IGRlY29kZWQgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUIHx8ICd5b3VyLXNlY3JldC1rZXknKSBhcyBhbnk7XG4gICAgICBcbiAgICAgIGlmICghZGVjb2RlZCB8fCAhZGVjb2RlZC5pZCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIHRva2VuJ1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLy8gQWRkIHVzZXIgaW5mbyB0byByZXF1ZXN0XG4gICAgICByZXEudXNlciA9IHtcbiAgICAgICAgaWQ6IGRlY29kZWQuaWQsXG4gICAgICAgIHVzZXJJZDogcGFyc2VJbnQoZGVjb2RlZC5pZCkgfHwgMSxcbiAgICAgICAgZW1haWw6IGRlY29kZWQuZW1haWwgfHwgJycsXG4gICAgICAgIG5hbWU6IGRlY29kZWQubmFtZSB8fCAnJyxcbiAgICAgICAgcm9sZTogZGVjb2RlZC5yb2xlIHx8ICdhZG1pbidcbiAgICAgIH07XG5cbiAgICAgIC8vIENoZWNrIHJvbGUgaWYgcmVxdWlyZWRcbiAgICAgIGlmIChyZXF1aXJlZFJvbGVzKSB7XG4gICAgICAgIGNvbnN0IGFsbG93ZWRSb2xlcyA9IEFycmF5LmlzQXJyYXkocmVxdWlyZWRSb2xlcykgPyByZXF1aXJlZFJvbGVzIDogW3JlcXVpcmVkUm9sZXNdO1xuICAgICAgICBpZiAoIWFsbG93ZWRSb2xlcy5pbmNsdWRlcyhyZXEudXNlci5yb2xlKSkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiAnSW5zdWZmaWNpZW50IHBlcm1pc3Npb25zJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIENhbGwgdGhlIGFjdHVhbCBoYW5kbGVyXG4gICAgICByZXR1cm4gYXdhaXQgaGFuZGxlcihyZXEsIHJlcyk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignQXV0aCBtaWRkbGV3YXJlIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIHRva2VuJ1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd2l0aEFkbWluQXV0aChcbiAgaGFuZGxlcjogKHJlcTogQXV0aGVudGljYXRlZFJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiBQcm9taXNlPHZvaWQ+XG4pIHtcbiAgcmV0dXJuIHdpdGhBdXRoKGhhbmRsZXIsICdhZG1pbicpO1xufSJdLCJuYW1lcyI6WyJqd3QiLCJ3aXRoQXV0aCIsImhhbmRsZXIiLCJyZXF1aXJlZFJvbGVzIiwicmVxIiwicmVzIiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhcnRzV2l0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidG9rZW4iLCJzdWJzdHJpbmciLCJkZWNvZGVkIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJpZCIsInVzZXIiLCJ1c2VySWQiLCJwYXJzZUludCIsImVtYWlsIiwibmFtZSIsInJvbGUiLCJhbGxvd2VkUm9sZXMiLCJBcnJheSIsImlzQXJyYXkiLCJpbmNsdWRlcyIsImVycm9yIiwiY29uc29sZSIsIndpdGhBZG1pbkF1dGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/auth-middleware.ts\n");

/***/ }),

/***/ "(api)/./pages/api/devices/cloud-config.ts":
/*!*******************************************!*\
  !*** ./pages/api/devices/cloud-config.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_auth_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/auth-middleware */ \"(api)/./lib/auth-middleware.ts\");\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function handler(req, res) {\n    try {\n        // Verify admin authentication\n        const authResult = await (0,_lib_auth_middleware__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(req);\n        if (!authResult.success || authResult.user?.role !== \"admin\") {\n            return res.status(401).json({\n                success: false,\n                message: \"Unauthorized. Admin access required.\"\n            });\n        }\n        if (req.method === \"GET\") {\n            // Get current cloud server configuration\n            const config = await prisma.$queryRaw`\n        SELECT * FROM cloud_config ORDER BY created_at DESC LIMIT 1\n      `;\n            if (config.length === 0) {\n                // Return default configuration if none exists\n                const defaultConfig = {\n                    server_url: process.env.CLOUD_SERVER_URL || \"https://your-cloud-server.com/api\",\n                    api_key: process.env.CLOUD_API_KEY || \"your-api-key\",\n                    sync_interval: parseInt(process.env.SYNC_INTERVAL || \"300\"),\n                    retry_attempts: parseInt(process.env.RETRY_ATTEMPTS || \"3\"),\n                    timeout: parseInt(process.env.TIMEOUT || \"30000\"),\n                    enable_auto_sync: true,\n                    enable_offline_mode: true,\n                    max_offline_records: 1000\n                };\n                return res.status(200).json({\n                    success: true,\n                    data: defaultConfig\n                });\n            }\n            return res.status(200).json({\n                success: true,\n                data: config[0]\n            });\n        }\n        if (req.method === \"POST\") {\n            // Create or update cloud server configuration\n            const { server_url, api_key, sync_interval, retry_attempts, timeout, enable_auto_sync, enable_offline_mode, max_offline_records } = req.body;\n            // Validation\n            if (!server_url || !api_key) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Server URL and API key are required\"\n                });\n            }\n            if (sync_interval < 60 || sync_interval > 3600) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Sync interval must be between 60 and 3600 seconds\"\n                });\n            }\n            if (retry_attempts < 1 || retry_attempts > 10) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Retry attempts must be between 1 and 10\"\n                });\n            }\n            if (timeout < 5000 || timeout > 120000) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Timeout must be between 5000 and 120000 milliseconds\"\n                });\n            }\n            if (max_offline_records < 100 || max_offline_records > 10000) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Max offline records must be between 100 and 10000\"\n                });\n            }\n            // Create cloud_config table if it doesn't exist\n            await prisma.$executeRaw`\n        CREATE TABLE IF NOT EXISTS cloud_config (\n          id INT AUTO_INCREMENT PRIMARY KEY,\n          server_url VARCHAR(255) NOT NULL,\n          api_key VARCHAR(255) NOT NULL,\n          sync_interval INT NOT NULL DEFAULT 300,\n          retry_attempts INT NOT NULL DEFAULT 3,\n          timeout INT NOT NULL DEFAULT 30000,\n          enable_auto_sync BOOLEAN NOT NULL DEFAULT TRUE,\n          enable_offline_mode BOOLEAN NOT NULL DEFAULT TRUE,\n          max_offline_records INT NOT NULL DEFAULT 1000,\n          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n          updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n        )\n      `;\n            // Insert new configuration\n            const result = await prisma.$executeRaw`\n        INSERT INTO cloud_config (\n          server_url, api_key, sync_interval, retry_attempts, timeout,\n          enable_auto_sync, enable_offline_mode, max_offline_records\n        ) VALUES (\n          ${server_url}, ${api_key}, ${sync_interval}, ${retry_attempts}, ${timeout},\n          ${enable_auto_sync}, ${enable_offline_mode}, ${max_offline_records}\n        )\n      `;\n            // Get the newly created configuration\n            const newConfig = await prisma.$queryRaw`\n        SELECT * FROM cloud_config ORDER BY created_at DESC LIMIT 1\n      `;\n            return res.status(201).json({\n                success: true,\n                message: \"Cloud configuration saved successfully\",\n                data: newConfig[0]\n            });\n        }\n        if (req.method === \"PUT\") {\n            // Update existing cloud server configuration\n            const { id } = req.query;\n            const { server_url, api_key, sync_interval, retry_attempts, timeout, enable_auto_sync, enable_offline_mode, max_offline_records } = req.body;\n            if (!id) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Configuration ID is required\"\n                });\n            }\n            // Validation (same as POST)\n            if (!server_url || !api_key) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Server URL and API key are required\"\n                });\n            }\n            // Update configuration\n            await prisma.$executeRaw`\n        UPDATE cloud_config SET\n          server_url = ${server_url},\n          api_key = ${api_key},\n          sync_interval = ${sync_interval},\n          retry_attempts = ${retry_attempts},\n          timeout = ${timeout},\n          enable_auto_sync = ${enable_auto_sync},\n          enable_offline_mode = ${enable_offline_mode},\n          max_offline_records = ${max_offline_records},\n          updated_at = CURRENT_TIMESTAMP\n        WHERE id = ${parseInt(id)}\n      `;\n            // Get updated configuration\n            const updatedConfig = await prisma.$queryRaw`\n        SELECT * FROM cloud_config WHERE id = ${parseInt(id)}\n      `;\n            if (updatedConfig.length === 0) {\n                return res.status(404).json({\n                    success: false,\n                    message: \"Configuration not found\"\n                });\n            }\n            return res.status(200).json({\n                success: true,\n                message: \"Cloud configuration updated successfully\",\n                data: updatedConfig[0]\n            });\n        }\n        if (req.method === \"DELETE\") {\n            // Delete cloud server configuration\n            const { id } = req.query;\n            if (!id) {\n                return res.status(400).json({\n                    success: false,\n                    message: \"Configuration ID is required\"\n                });\n            }\n            await prisma.$executeRaw`\n        DELETE FROM cloud_config WHERE id = ${parseInt(id)}\n      `;\n            return res.status(200).json({\n                success: true,\n                message: \"Cloud configuration deleted successfully\"\n            });\n        }\n        return res.status(405).json({\n            success: false,\n            message: \"Method not allowed\"\n        });\n    } catch (error) {\n        console.error(\"Cloud config error:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Internal server error\"\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/devices/cloud-config.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdevices%2Fcloud-config&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdevices%5Ccloud-config.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();