"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/payroll/rules";
exports.ids = ["pages/api/payroll/rules"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpayroll%2Frules&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpayroll%5Crules.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpayroll%2Frules&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpayroll%5Crules.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_payroll_rules_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\payroll\\rules.ts */ \"(api)/./pages/api/payroll/rules.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_payroll_rules_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_payroll_rules_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/payroll/rules\",\n        pathname: \"/api/payroll/rules\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_payroll_rules_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnBheXJvbGwlMkZydWxlcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDcGF5cm9sbCU1Q3J1bGVzLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzREO0FBQzVEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWZtcy1uZXh0anMvPzYxMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxwYXlyb2xsXFxcXHJ1bGVzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcGF5cm9sbC9ydWxlc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3BheXJvbGwvcnVsZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpayroll%2Frules&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpayroll%5Crules.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/payroll/rules.ts":
/*!************************************!*\
  !*** ./pages/api/payroll/rules.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Mock data untuk aturan payroll\nconst mockPayrollRules = [\n    {\n        id: 1,\n        name: \"Potongan Keterlambatan\",\n        type: \"deduction\",\n        category: \"attendance\",\n        calculation_method: \"per_minute\",\n        amount: 1000,\n        conditions: {\n            min_threshold: 15\n        },\n        description: \"Potongan Rp 1.000 per menit untuk keterlambatan lebih dari 15 menit\",\n        is_active: true,\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: 2,\n        name: \"Potongan Alpha\",\n        type: \"deduction\",\n        category: \"attendance\",\n        calculation_method: \"per_occurrence\",\n        amount: 50000,\n        conditions: {},\n        description: \"Potongan Rp 50.000 per hari alpha\",\n        is_active: true,\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: 3,\n        name: \"Potongan Pulang Cepat\",\n        type: \"deduction\",\n        category: \"attendance\",\n        calculation_method: \"per_minute\",\n        amount: 500,\n        conditions: {\n            min_threshold: 30\n        },\n        description: \"Potongan Rp 500 per menit untuk pulang lebih dari 30 menit sebelum jam kerja\",\n        is_active: true,\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: 4,\n        name: \"Tunjangan Kehadiran\",\n        type: \"allowance\",\n        category: \"attendance\",\n        calculation_method: \"fixed_amount\",\n        amount: 100000,\n        conditions: {\n            min_threshold: 22\n        },\n        description: \"Tunjangan kehadiran Rp 100.000 untuk minimal 22 hari hadir\",\n        is_active: true,\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: 5,\n        name: \"Tunjangan Lembur\",\n        type: \"allowance\",\n        category: \"overtime\",\n        calculation_method: \"per_minute\",\n        amount: 2000,\n        conditions: {},\n        description: \"Tunjangan lembur Rp 2.000 per menit\",\n        is_active: true,\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\"\n    }\n];\nconst mockSalaryComponents = [\n    {\n        id: 1,\n        name: \"Gaji Pokok\",\n        type: \"basic\",\n        amount: 0,\n        is_taxable: true,\n        is_active: true\n    },\n    {\n        id: 2,\n        name: \"Tunjangan Transport\",\n        type: \"allowance\",\n        amount: 300000,\n        is_taxable: true,\n        is_active: true\n    },\n    {\n        id: 3,\n        name: \"Tunjangan Makan\",\n        type: \"allowance\",\n        amount: 400000,\n        is_taxable: true,\n        is_active: true\n    },\n    {\n        id: 4,\n        name: \"BPJS Kesehatan\",\n        type: \"deduction\",\n        amount: 1,\n        is_taxable: false,\n        is_active: true\n    },\n    {\n        id: 5,\n        name: \"BPJS Ketenagakerjaan\",\n        type: \"deduction\",\n        amount: 2,\n        is_taxable: false,\n        is_active: true\n    }\n];\nconst mockPayrollSettings = {\n    id: 1,\n    working_days_per_month: 22,\n    working_hours_per_day: 8,\n    overtime_multiplier: 1.5,\n    late_tolerance_minutes: 15,\n    early_leave_tolerance_minutes: 30,\n    minimum_working_hours: 7,\n    tax_percentage: 5,\n    updated_at: \"2024-01-01T00:00:00Z\"\n};\nasync function handler(req, res) {\n    try {\n        switch(req.method){\n            case \"GET\":\n                return handleGet(req, res);\n            case \"POST\":\n                return handlePost(req, res);\n            case \"PUT\":\n                return handlePut(req, res);\n            case \"DELETE\":\n                return handleDelete(req, res);\n            default:\n                return res.status(405).json({\n                    success: false,\n                    message: \"Method not allowed\"\n                });\n        }\n    } catch (error) {\n        console.error(\"Payroll rules API error:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Internal server error\"\n        });\n    }\n}\nasync function handleGet(req, res) {\n    const { type, category } = req.query;\n    if (type === \"settings\") {\n        return res.status(200).json({\n            success: true,\n            data: mockPayrollSettings,\n            message: \"Payroll settings retrieved successfully\"\n        });\n    }\n    if (type === \"components\") {\n        let components = mockSalaryComponents;\n        if (category) {\n            components = components.filter((comp)=>comp.type === category);\n        }\n        return res.status(200).json({\n            success: true,\n            data: components,\n            message: \"Salary components retrieved successfully\"\n        });\n    }\n    // Default: return payroll rules\n    let rules = mockPayrollRules;\n    if (type && type !== \"all\") {\n        rules = rules.filter((rule)=>rule.type === type);\n    }\n    if (category && category !== \"all\") {\n        rules = rules.filter((rule)=>rule.category === category);\n    }\n    return res.status(200).json({\n        success: true,\n        data: rules,\n        message: \"Payroll rules retrieved successfully\"\n    });\n}\nasync function handlePost(req, res) {\n    const { type } = req.query;\n    if (type === \"rule\") {\n        const { name, type: ruleType, category, calculation_method, amount, conditions, description } = req.body;\n        // Validation\n        if (!name || !ruleType || !category || !calculation_method || amount === undefined) {\n            return res.status(400).json({\n                success: false,\n                message: \"Missing required fields\"\n            });\n        }\n        const newRule = {\n            id: mockPayrollRules.length + 1,\n            name,\n            type: ruleType,\n            category,\n            calculation_method,\n            amount,\n            conditions: conditions || {},\n            description: description || \"\",\n            is_active: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n        mockPayrollRules.push(newRule);\n        return res.status(201).json({\n            success: true,\n            data: newRule,\n            message: \"Payroll rule created successfully\"\n        });\n    }\n    if (type === \"component\") {\n        const { name, type: compType, amount, is_taxable } = req.body;\n        if (!name || !compType || amount === undefined) {\n            return res.status(400).json({\n                success: false,\n                message: \"Missing required fields\"\n            });\n        }\n        const newComponent = {\n            id: mockSalaryComponents.length + 1,\n            name,\n            type: compType,\n            amount,\n            is_taxable: is_taxable !== undefined ? is_taxable : true,\n            is_active: true\n        };\n        mockSalaryComponents.push(newComponent);\n        return res.status(201).json({\n            success: true,\n            data: newComponent,\n            message: \"Salary component created successfully\"\n        });\n    }\n    return res.status(400).json({\n        success: false,\n        message: \"Invalid request type\"\n    });\n}\nasync function handlePut(req, res) {\n    const { type, id } = req.query;\n    if (type === \"settings\") {\n        const { working_days_per_month, working_hours_per_day, overtime_multiplier, late_tolerance_minutes, early_leave_tolerance_minutes, minimum_working_hours, tax_percentage } = req.body;\n        // Update settings\n        Object.assign(mockPayrollSettings, {\n            working_days_per_month: working_days_per_month || mockPayrollSettings.working_days_per_month,\n            working_hours_per_day: working_hours_per_day || mockPayrollSettings.working_hours_per_day,\n            overtime_multiplier: overtime_multiplier || mockPayrollSettings.overtime_multiplier,\n            late_tolerance_minutes: late_tolerance_minutes || mockPayrollSettings.late_tolerance_minutes,\n            early_leave_tolerance_minutes: early_leave_tolerance_minutes || mockPayrollSettings.early_leave_tolerance_minutes,\n            minimum_working_hours: minimum_working_hours || mockPayrollSettings.minimum_working_hours,\n            tax_percentage: tax_percentage || mockPayrollSettings.tax_percentage,\n            updated_at: new Date().toISOString()\n        });\n        return res.status(200).json({\n            success: true,\n            data: mockPayrollSettings,\n            message: \"Payroll settings updated successfully\"\n        });\n    }\n    if (type === \"rule\") {\n        const ruleId = parseInt(id);\n        const ruleIndex = mockPayrollRules.findIndex((rule)=>rule.id === ruleId);\n        if (ruleIndex === -1) {\n            return res.status(404).json({\n                success: false,\n                message: \"Payroll rule not found\"\n            });\n        }\n        const updatedRule = {\n            ...mockPayrollRules[ruleIndex],\n            ...req.body,\n            updated_at: new Date().toISOString()\n        };\n        mockPayrollRules[ruleIndex] = updatedRule;\n        return res.status(200).json({\n            success: true,\n            data: updatedRule,\n            message: \"Payroll rule updated successfully\"\n        });\n    }\n    if (type === \"component\") {\n        const componentId = parseInt(id);\n        const componentIndex = mockSalaryComponents.findIndex((comp)=>comp.id === componentId);\n        if (componentIndex === -1) {\n            return res.status(404).json({\n                success: false,\n                message: \"Salary component not found\"\n            });\n        }\n        const updatedComponent = {\n            ...mockSalaryComponents[componentIndex],\n            ...req.body\n        };\n        mockSalaryComponents[componentIndex] = updatedComponent;\n        return res.status(200).json({\n            success: true,\n            data: updatedComponent,\n            message: \"Salary component updated successfully\"\n        });\n    }\n    return res.status(400).json({\n        success: false,\n        message: \"Invalid request type\"\n    });\n}\nasync function handleDelete(req, res) {\n    const { type, id } = req.query;\n    if (type === \"rule\") {\n        const ruleId = parseInt(id);\n        const ruleIndex = mockPayrollRules.findIndex((rule)=>rule.id === ruleId);\n        if (ruleIndex === -1) {\n            return res.status(404).json({\n                success: false,\n                message: \"Payroll rule not found\"\n            });\n        }\n        const deletedRule = mockPayrollRules.splice(ruleIndex, 1)[0];\n        return res.status(200).json({\n            success: true,\n            data: deletedRule,\n            message: \"Payroll rule deleted successfully\"\n        });\n    }\n    if (type === \"component\") {\n        const componentId = parseInt(id);\n        const componentIndex = mockSalaryComponents.findIndex((comp)=>comp.id === componentId);\n        if (componentIndex === -1) {\n            return res.status(404).json({\n                success: false,\n                message: \"Salary component not found\"\n            });\n        }\n        const deletedComponent = mockSalaryComponents.splice(componentIndex, 1)[0];\n        return res.status(200).json({\n            success: true,\n            data: deletedComponent,\n            message: \"Salary component deleted successfully\"\n        });\n    }\n    return res.status(400).json({\n        success: false,\n        message: \"Invalid request type\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/payroll/rules.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpayroll%2Frules&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cpayroll%5Crules.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();