version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 5

  laravel-api:
    build:
      context: ./laravel-api
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: laravel_api
    restart: unless-stopped
    environment:
      - APP_NAME=AFMS
      - APP_ENV=production
      - APP_KEY=base64:afms-laravel-app-key-production-2024-secure-base64-encoded-key
      - APP_DEBUG=false
      - APP_URL=https://api.cvtigaputraperkasa.id
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=afms_database
      - DB_USERNAME=afms_user
      - DB_PASSWORD=afms_secure_password_2024
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - BROADCAST_DRIVER=redis
      - MAIL_MAILER=smtp
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=your-email@gmail.com
      - MAIL_PASSWORD=your-app-password
      - MAIL_ENCRYPTION=tls
      - MAIL_FROM_ADDRESS=noreply@cvtigaputraperkasa.id
      - MAIL_FROM_NAME=AFMS
      - FINGERPRINT_DEVICE_IP=192.168.1.100
      - FINGERPRINT_DEVICE_PORT=4370
      - FINGERPRINT_DEVICE_PASSWORD=123456
      - FINGERPRINT_DEVICE_TIMEOUT=30
      - NEXTJS_API_URL=https://cvtigaputraperkasa.id/api
      - NEXTJS_API_TOKEN=afms-nextjs-api-token-production
      - API_RATE_LIMIT=100
      - JWT_SECRET=afms-jwt-secret-key-production-2024-very-secure
      - JWT_TTL=60
    volumes:
      - ./laravel-api:/var/www/html
      - laravel_storage:/var/www/html/storage
      - laravel_bootstrap_cache:/var/www/html/bootstrap/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
        - NODE_ENV=production
    container_name: nextjs_app
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cvtigaputraperkasa.id
      - NEXT_PUBLIC_APP_NAME=AFMS
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - API_SECRET_TOKEN=afms-nextjs-api-token-production
    depends_on:
      laravel-api:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      nextjs:
        condition: service_healthy
      laravel-api:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: certbot_ssl
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@cvtigaputraperkasa.id --agree-tos --no-eff-email --force-renewal -d cvtigaputraperkasa.id -d www.cvtigaputraperkasa.id -d api.cvtigaputraperkasa.id
    depends_on:
      nginx:
        condition: service_healthy
    networks:
      - app-network
    profiles:
      - ssl

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  laravel_storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/laravel/storage
  laravel_bootstrap_cache:
    driver: local
    driver_opts:
       type: none
       o: bind
       device: ./data/laravel/bootstrap

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16