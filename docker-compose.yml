version: '3.8'

services:
  # Next.js Frontend
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://afms_user:afms_secure_password_2024@postgres:5432/afms_database
      - NEXT_PUBLIC_API_URL=https://api.afms.my.id/api
      - NEXT_PUBLIC_APP_URL=https://afms.my.id
      - NEXTAUTH_URL=https://afms.my.id
      - NEXTAUTH_SECRET=afms-nextauth-production-secret-2024-secure-key-abc123
      - JWT_SECRET=afms-production-jwt-secret-key-2024-ultra-secure-random-string-xyz789
      - NEXT_PUBLIC_FINGERPRINT_ENABLED=true
      - NEXT_PUBLIC_FINGERPRINT_REALTIME=true
      - NEXT_PUBLIC_LARAVEL_API_URL=https://api.afms.my.id
      - FINGERPRINT_DEVICE_TYPE=solution-type-100c
      - FINGERPRINT_CLOUD_ADMS_SERVER=https://api.afms.my.id/api/fingerprint
      - DEVICE_REGISTRATION_KEY=afms-device-key-production-2024
      - SECURE_COOKIES=true
      - SAME_SITE_COOKIES=strict
      - HTTPS_ONLY=true
    depends_on:
      postgres:
        condition: service_healthy
      laravel-api:
        condition: service_healthy
    networks:
      - afms-network
    restart: unless-stopped
    volumes:
      - ./prisma:/app/prisma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Laravel API Backend
  laravel-api:
    build:
      context: ./laravel-api
      dockerfile: Dockerfile
    environment:
      - APP_NAME="AFMS API"
      - APP_ENV=production
      - APP_KEY=base64:afms-laravel-app-key-production-2024-secure-base64-encoded-key
      - APP_DEBUG=false
      - APP_URL=https://api.afms.my.id
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=afms_database
      - DB_USERNAME=afms_user
      - DB_PASSWORD=afms_secure_password_2024
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - BROADCAST_DRIVER=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - afms-network
    restart: unless-stopped
    volumes:
      - laravel-storage:/var/www/html/storage
      - laravel-logs:/var/www/html/storage/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL Database (Shared)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=afms_database
      - POSTGRES_USER=afms_user
      - POSTGRES_PASSWORD=afms_secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - afms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U afms_user -d afms_database"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis for Laravel API caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - afms-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - nextjs
      - laravel-api
    networks:
      - afms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Networks
networks:
  afms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  laravel-storage:
    driver: local
  laravel-logs:
    driver: local
  nginx-logs:
    driver: local