#! nginx-deployment.yaml
# Generated code, do not edit
apiVersion: apps/v1
kind: Deployment
metadata:
    name: nginx
    namespace: afmsnextj
    labels:
        com.docker.compose.project: afmsnextj
        com.docker.compose.service: nginx
spec:
    replicas: 1
    selector:
        matchLabels:
            com.docker.compose.project: afmsnextj
            com.docker.compose.service: nginx
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                com.docker.compose.project: afmsnextj
                com.docker.compose.service: nginx
                com.docker.compose.network.afms-network: "true"
        spec:
            restartPolicy: unless-stopped
            containers:
                - name: nginx
                  image: nginx:alpine
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    exec:
                        command: ['wget --quiet --tries=1 --spider http://localhost/health']
                    periodSeconds: 30
                    initialDelaySeconds: 30
                    timeoutSeconds: 10
                    failureThreshold: 3
                  ports:
                    - name: nginx-443
                      containerPort: 443
                    - name: nginx-80
                      containerPort: 80
                  volumeMounts:
                    - name: etc-nginx-nginx-conf
                      mountPath: /etc/nginx/nginx.conf
                      readOnly: true
                    - name: etc-nginx-ssl
                      mountPath: /etc/nginx/ssl
                      readOnly: true
                    - name: var-log-nginx
                      mountPath: /var/log/nginx
            volumes:
                - name: etc-nginx-nginx-conf
                  hostPath:
                    path: C:\laragon\www\afmsnextj\nginx.conf
                  readOnly: true
                - name: etc-nginx-ssl
                  hostPath:
                    path: C:\laragon\www\afmsnextj\nginx\ssl
                  readOnly: true
                - name: var-log-nginx
                  persistentVolumeClaim:
                    claimName: nginx-nginx-logs
