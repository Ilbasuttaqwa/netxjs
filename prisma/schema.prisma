// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    BigInt    @id @default(autoincrement())
  nama_pegawai          String    @db.VarChar(255)
  tempat_lahir          String?   @db.VarChar(255)
  tanggal_lahir         DateTime? @db.Date
  jenis_kelamin         String?   @db.VarChar(255)
  alamat                String?   @db.Text
  tanggal_masuk         DateTime? @db.Date
  gaji                  Int?      @default(0)
  status_pegawai        Boolean?  @default(false)
  email                 String    @unique @db.VarChar(255)
  email_verified_at     DateTime? @db.Timestamp(6)
  password              String    @db.VarChar(255)
  remember_token        String?   @db.VarChar(100)
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
  role                  String?   @default("user") @db.VarChar(50)
  id_jabatan            BigInt?
  id_cabang             BigInt?
  jam_istirahat_mulai   DateTime? @db.Time(6)
  jam_istirahat_selesai DateTime? @db.Time(6)
  device_user_id        String?   @db.VarChar(50)
  
  // Relations
  jabatan               Jabatan?  @relation(fields: [id_jabatan], references: [id], onDelete: Restrict)
  cabang                Cabang?   @relation(fields: [id_cabang], references: [id], onDelete: SetNull)
  absensi               Absensi[]
  fingerprintAttendances FingerprintAttendance[]
  
  @@index([role, id_cabang], map: "idx_users_role_cabang")
  @@index([device_user_id], map: "idx_users_device_id")
  @@map("users")
}

model Jabatan {
  id                        BigInt    @id @default(autoincrement())
  nama_jabatan              String    @db.VarChar(255)
  jam_masuk                 DateTime? @db.Time(6)
  jam_masuk_siang           DateTime? @db.Time(6)
  jatah_libur_per_bulan     Int       @default(2)
  denda_per_hari_libur      Decimal   @default(50000.00) @db.Decimal(10, 2)
  bonus_tidak_libur         Decimal   @default(25000.00) @db.Decimal(10, 2)
  gaji_pokok                Decimal?  @db.Decimal(15, 2)
  created_at                DateTime? @db.Timestamp(6)
  updated_at                DateTime? @db.Timestamp(6)
  
  // Relations
  users                     User[]
  
  @@map("jabatans")
}

model Cabang {
  id                BigInt    @id @default(autoincrement())
  nama_cabang       String    @db.VarChar(255)
  alamat_cabang     String?   @db.Text
  telepon_cabang    String?   @db.VarChar(20)
  email_cabang      String?   @db.VarChar(255)
  kode_cabang       String    @unique @db.VarChar(10)
  status            Boolean   @default(true)
  created_at        DateTime? @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)
  
  // Relations
  users             User[]
  absensi           Absensi[]
  fingerprintAttendances FingerprintAttendance[]
  
  @@map("cabang")
}

model Absensi {
  id                    BigInt    @id @default(autoincrement())
  id_user               BigInt
  tanggal               DateTime  @db.Date
  jam_masuk             DateTime? @db.Time(6)
  jam_keluar            DateTime? @db.Time(6)
  jam_istirahat_mulai   DateTime? @db.Time(6)
  jam_istirahat_selesai DateTime? @db.Time(6)
  status                String    @default("hadir") @db.VarChar(50)
  keterangan            String?   @db.Text
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
  id_cabang             BigInt?
  
  // Relations
  user                  User      @relation(fields: [id_user], references: [id], onDelete: Cascade)
  cabang                Cabang?   @relation(fields: [id_cabang], references: [id], onDelete: SetNull)
  
  @@index([id_user, tanggal], map: "idx_absensi_user_tanggal")
  @@index([tanggal], map: "idx_absensi_tanggal")
  @@index([status], map: "idx_absensi_status")
  @@map("absensis")
}

model FingerprintAttendance {
  id                    BigInt    @id @default(autoincrement())
  user_id               BigInt?
  device_user_id        String?   @db.VarChar(50)
  cabang_id             BigInt?
  attendance_time       DateTime  @db.Timestamp(6)
  attendance_type       Int       @default(1)
  verification_type     String?   @db.VarChar(50)
  fingerprint_id        String?   @db.VarChar(50)
  device_ip             String?   @db.VarChar(45)
  device_name           String?   @db.VarChar(100)
  is_processed          Boolean   @default(false)
  processing_status     String?   @default("pending") @db.VarChar(50)
  sync_batch_id         String?   @db.VarChar(100)
  is_realtime           Boolean   @default(false)
  created_at            DateTime? @db.Timestamp(6)
  updated_at            DateTime? @db.Timestamp(6)
  
  // Relations
  user                  User?     @relation(fields: [user_id], references: [id], onDelete: SetNull)
  cabang                Cabang?   @relation(fields: [cabang_id], references: [id], onDelete: SetNull)
  
  @@index([device_user_id, device_ip], map: "fingerprint_attendances_device_user_id_device_ip_index")
  @@index([attendance_time], map: "fingerprint_attendances_attendance_time_index")
  @@index([is_processed], map: "fingerprint_attendances_is_processed_index")
  @@index([user_id], map: "fingerprint_attendances_user_id_index")
  @@map("fingerprint_attendances")
}
