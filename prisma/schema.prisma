generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     BigInt                  @id @default(autoincrement())
  nama_pegawai           String                  @db.VarChar(255)
  tempat_lahir           String?                 @db.VarChar(255)
  tanggal_lahir          DateTime?               @db.Date
  jenis_kelamin          String?                 @db.VarChar(255)
  alamat                 String?
  tanggal_masuk          DateTime?               @db.Date
  gaji                   Int?                    @default(0)
  status_pegawai         Boolean?                @default(false)
  email                  String                  @unique @db.VarChar(255)
  email_verified_at      DateTime?               @db.Timestamp(6)
  password               String                  @db.VarChar(255)
  remember_token         String?                 @db.VarChar(100)
  created_at             DateTime?               @db.Timestamp(6)
  updated_at             DateTime?               @db.Timestamp(6)
  role                   String?                 @default("user") @db.VarChar(50)
  id_jabatan             BigInt?
  id_cabang              BigInt?
  jam_istirahat_mulai    DateTime?               @db.Time(6)
  jam_istirahat_selesai  DateTime?               @db.Time(6)
  device_user_id         String?                 @db.VarChar(50)                 
  absensi                Absensi[]
  fingerprintAttendances FingerprintAttendance[]
  cabang                 Cabang?                 @relation(fields: [id_cabang], references: [id])
  jabatan                Jabatan?                @relation(fields: [id_jabatan], references: [id], onDelete: Restrict)

  @@index([role, id_cabang], map: "idx_users_role_cabang")
  @@index([device_user_id], map: "idx_users_device_id")
  @@map("users")
}

model Jabatan {
  id                    BigInt    @id @default(autoincrement())
  nama_jabatan          String    @db.VarChar(255)
  jam_masuk             DateTime? @db.Time(6)
  jam_masuk_siang       DateTime? @db.Time(6)
  jatah_libur_per_bulan Int       @default(2)
  denda_per_hari_libur  Decimal   @default(50000.00) @db.Decimal(10, 2)
  bonus_tidak_libur     Decimal   @default(25000.00) @db.Decimal(10, 2)
  gaji_pokok            Decimal?  @db.Decimal(15, 2)  
  created_at            DateTime? 
  updated_at            DateTime? 
  users                 User[]

  @@map("jabatans")
}

model Cabang {
  id                     BigInt                  @id @default(autoincrement())
  nama_cabang            String                  
  alamat_cabang          String?
  telepon_cabang         String?                 
  email_cabang           String?                 
  kode_cabang            String                  @unique 
  status                 Boolean                 @default(true)
  created_at             DateTime?               
  updated_at             DateTime?               
  absensi                Absensi[]
  devices                Device[]
  fingerprintAttendances FingerprintAttendance[]
  users                  User[]

  @@map("cabang")
}

model Absensi {
  id                    BigInt    @id @default(autoincrement())
  id_user               BigInt
  tanggal               DateTime  
  jam_masuk             DateTime? 
  jam_keluar            DateTime? 
  jam_istirahat_mulai   DateTime? 
  jam_istirahat_selesai DateTime? 
  status                String    @default("hadir") 
  keterangan            String?
  created_at            DateTime? 
  updated_at            DateTime? 
  id_cabang             BigInt?
  cabang                Cabang?   @relation(fields: [id_cabang], references: [id])
  user                  User      @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@index([id_user, tanggal], map: "idx_absensi_user_tanggal")
  @@index([tanggal], map: "idx_absensi_tanggal")
  @@index([status], map: "idx_absensi_status")
  @@map("absensis")
}

model FingerprintAttendance {
  id                BigInt    @id @default(autoincrement())
  user_id           BigInt?
  device_user_id    String?   
  cabang_id         BigInt?
  device_id         String?   
  attendance_time   DateTime  
  attendance_type   Int       @default(1)
  verification_type String?   
  fingerprint_id    String?   
  device_ip         String?   
  device_name       String?   
  is_processed      Boolean   @default(false)
  processing_status String?   @default("pending") 
  sync_batch_id     String?   
  is_realtime       Boolean   @default(false)
  created_at        DateTime? 
  updated_at        DateTime? 
  cabang            Cabang?   @relation(fields: [cabang_id], references: [id])
  device            Device?   @relation("DeviceAttendance", fields: [device_id], references: [device_id])
  user              User?     @relation(fields: [user_id], references: [id])

  @@index([device_user_id, device_ip], map: "fingerprint_attendances_device_user_id_device_ip_index")
  @@index([attendance_time], map: "fingerprint_attendances_attendance_time_index")
  @@index([is_processed], map: "fingerprint_attendances_is_processed_index")
  @@index([user_id], map: "fingerprint_attendances_user_id_index")
  @@index([device_id], map: "fingerprint_attendances_device_id_index")
  @@map("fingerprint_attendances")
}

model Event {
  id            String   @id @default(cuid())
  eventType     String   @db.VarChar(255)
  aggregateId   String   @db.VarChar(255)
  aggregateType String   @db.VarChar(255)
  eventData     Json
  metadata      Json?
  version       Int
  timestamp     DateTime @default(now()) @db.Timestamp(6)
  userId        String?  @db.VarChar(255)  

  @@index([aggregateId, version], map: "events_aggregate_id_version_index")
  @@index([eventType], map: "events_event_type_index")
  @@index([timestamp], map: "events_timestamp_index")
  @@map("events")
}

model ReadModel {
  id          String   @id @default(cuid())
  type        String   @db.VarChar(255)
  data        Json
  version     Int      @default(1)
  lastUpdated DateTime @default(now()) @updatedAt @db.Timestamp(6)

  @@unique([type, id], map: "read_models_type_id_unique")
  @@index([type], map: "read_models_type_index")
  @@map("read_models")
}

model IdempotencyKey {
  key         String   @id @db.VarChar(255)
  requestHash String   @db.VarChar(255)
  response    Json?
  status      String   @default("processing") @db.VarChar(50)
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  expiresAt   DateTime @db.Timestamp(6)

  @@index([status], map: "idempotency_keys_status_index")
  @@index([expiresAt], map: "idempotency_keys_expires_at_index")
  @@map("idempotency_keys")
}

model AttendanceDeduplication {
  id              String   @id @default(cuid())
  deviceId        String   
  employeeId      String   
  fingerprintHash String   
  timestamp       DateTime
  createdAt       DateTime @default(now())

  @@unique([deviceId, employeeId, fingerprintHash, timestamp], map: "attendance_dedup_unique")
  @@index([deviceId, employeeId], map: "attendance_dedup_device_employee_index")
  @@index([timestamp], map: "attendance_dedup_timestamp_index")
  @@map("attendance_deduplication")
}

model BusinessRules {
  id          String    @id @default(cuid())
  name        String    @db.VarChar(255)
  description String
  category    String    @db.VarChar(100)
  conditions  Json
  actions     Json
  priority    Int       @default(0)
  isActive    Boolean   @default(true)
  validFrom   DateTime  @default(now()) @db.Timestamp(6)
  validTo     DateTime? @db.Timestamp(6)
  createdBy   String    @db.VarChar(255)
  updatedBy   String    @db.VarChar(255)
  version     Int       @default(1)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)

  @@index([category, isActive], map: "business_rules_category_active_index")
  @@index([validFrom, validTo], map: "business_rules_validity_index")
  @@index([priority], map: "business_rules_priority_index")
  @@map("business_rules")
}

model PayrollDeductions {
  id          String   @id @default(cuid())
  employeeId  String   
  amount      Decimal  
  reason      String   
  type        String   
  ruleId      String?  
  appliedDate DateTime @default(now())
  payrollId   String?  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([employeeId], map: "payroll_deductions_employee_index")
  @@index([appliedDate], map: "payroll_deductions_date_index")
  @@index([ruleId], map: "payroll_deductions_rule_index")
  @@map("payroll_deductions")
}

model Device {
  id               BigInt                  @id @default(autoincrement())
  device_id        String                  @unique 
  nama             String                  
  tipe             String                  
  cabang_id        BigInt
  ip_address       String?                 
  port             Int?
  status           String                  @default("aktif") 
  lokasi           String?                 
  keterangan       String?
  last_sync        DateTime?
  firmware_version String?                 
  created_at       DateTime                @default(now())
  updated_at       DateTime                @updatedAt
  statusLogs       DeviceStatusLog[]
  cabang           Cabang                  @relation(fields: [cabang_id], references: [id], onDelete: Cascade)
  attendance       FingerprintAttendance[] @relation("DeviceAttendance")

  @@index([device_id], map: "devices_device_id_index")
  @@index([cabang_id], map: "devices_cabang_id_index")
  @@index([status], map: "devices_status_index")
  @@index([tipe], map: "devices_tipe_index")
  @@map("devices")
}

model DeviceStatusLog {
  id               BigInt   @id @default(autoincrement())
  device_id        BigInt
  status           String   
  firmware_version String?  
  error_message    String?
  employee_count   Int      @default(0)
  storage_usage    Int      @default(0)
  timestamp        DateTime @default(now())
  device           Device   @relation(fields: [device_id], references: [id], onDelete: Cascade)

  @@index([device_id, timestamp], map: "device_status_logs_device_timestamp_index")
  @@index([status], map: "device_status_logs_status_index")
  @@index([timestamp], map: "device_status_logs_timestamp_index")
  @@map("device_status_logs")
}
